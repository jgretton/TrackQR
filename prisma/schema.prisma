// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model QrCode {
  id              String   @id @default(cuid())
  user_id         String   // References Supabase auth.users.id - NO RELATION
  name            String   // User-friendly name
  destination_url String   // Where the QR code redirects to
  redirect_code   String   @unique // Unique short code for /r/abc123
  qr_image_data   String?  // Base64 encoded QR code image
  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt
  expires_at      DateTime? // Null = no expiration
  is_active       Boolean  @default(true)
  
  // Relationship to scans
  scans Scan[]
  
  // Unique constraint: each user can only have one QR code with a given name
  @@unique([user_id, name])
  
  @@map("qr_codes")
}

model Scan {
  id           String   @id @default(cuid())
  qr_code_id   String
  scanned_at   DateTime @default(now())
  ip_address   String?
  user_agent   String?
  country      String?
  city         String?
  device_type  String?  // Mobile, Desktop, Tablet
  referrer     String?
  
  qr_code QrCode @relation(fields: [qr_code_id], references: [id], onDelete: Cascade)
  
  @@map("scans")
}